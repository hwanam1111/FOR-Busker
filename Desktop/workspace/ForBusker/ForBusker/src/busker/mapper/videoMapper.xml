<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="video">

<!-- 글 등록 -->
<insert id="videoInsert" parameterType="busker.scan.vo.VideoVO">
	INSERT INTO Video(videono, videoname, videodetail, videourl, videoDate, memEmail, memteamname, videocount, videolike)
	values(seq_video.nextVal, #{videoName}, #{videoDetail}, #{videoUrl}, sysdate, #{memEmail}, #{memTeamName}, '0', '0')
</insert>

<!-- 비디오 테이블 전체 로우 갯수 가져오기 -->
<select id="videoPageCount" resultType="int">
SELECT count(videono)
FROM video
</select>

<!-- 리스트 띄우기 -->
<select id="videoList" parameterType="int" resultType="busker.scan.vo.VideoVO"> 
SELECT  memEmail, videono,videoname, videodetail, videourl, videosomenale, videoDate, memteamname
FROM (SELECT  rownum as rnum , video.memEmail memEmail, video.videono videono, video.videoname videoname, video.videodetail videodetail, video.videourl videourl, substr(video.videourl, -11) as videosomenale, 
      video.videoDate videoDate, member.memteamname memteamname
      FROM video 
      INNER JOIN member          
      ON video.mememail = member.mememail
      order by videoDate desc )
WHERE  rnum BETWEEN  ((#{curPage}-1)*9)+1  AND #{curPage}*9
</select>

<!-- 글 보기 -->
<select id="videoView" parameterType="hashmap" resultType="busker.scan.vo.VideoVO"> 
SELECT video.videono, video.videoname, video.videodetail, video.videourl, substr(video.videourl, -11) as urlsomenale, video.videoDate, video.videolike, video.videoCount, member.memEmail, member.memteamname
FROM video 
INNER JOIN member          
ON video.mememail = member.mememail
where video.videono=#{videoNo}
order by videoDate desc
</select>

<!-- 좋아요 한 페이지도 삭제 -->
<delete id="videoLikeParentDelete" parameterType="hashmap">
delete from videoLike where videoNo=#{videoNo}
</delete>

<!-- 글 삭제 -->
<delete id="videoDelete" parameterType="hashmap">
	DELETE FROM video where videono=#{videoNo}
</delete>
 
<!-- 글 수정 폼 셀렉트 -->
<select id="videoViewSelect" parameterType="busker.scan.vo.VideoVO" resultType="busker.scan.vo.VideoVO">
	select * from video where videono=#{videoNo}
</select>

<!-- 글 수정 -->
<update id="videoUpdate" parameterType="busker.scan.vo.VideoVO">
	UPDATE video SET videoname=#{videoName}, videourl=#{videoUrl},videodetail=#{videoDetail} WHERE videono=#{videoNo}
</update>

<!-- 글 조회수 -->
<update id="videoCount" parameterType="busker.scan.vo.VideoVO">
	update video set videocount= videocount+1 where videono =#{videoNo}
</update>

<!-- NEW LIST -->
<select id="videoNewList" parameterType="busker.scan.vo.VideoVO" resultType="busker.scan.vo.VideoVO">
<![CDATA[
SELECT video.memEmail, video.videono, video.videoname, video.videodetail, video.videourl, substr(video.videourl, -11) as videosomenale, video.videoDate, member.memEmail, member.memteamname
FROM video  
INNER JOIN member          
ON video.mememail = member.mememail 
WHERE rownum <= 2 
order by videono desc
]]>
</select>

<!-- 좋아요 Insert -->
<insert id="videoLikeInsert" parameterType="busker.scan.vo.VideoLikeVO">
INSERT INTO VideoLike(likeNo, memLoginEmail, videoNo) VALUES(seq_videolike.nextval, #{memLoginEmail}, #{videoNo})
</insert>

<!-- 좋아요 Update -->
<update id="videoLikeUpdate" parameterType="busker.scan.vo.VideoVO">
update video set videoLike= videoLike+1 where videoNo =#{videoNo}
</update>

<!-- 좋아요 확인 -->
<select id="videoLikeList" parameterType="busker.scan.vo.VideoVO" resultType="busker.scan.vo.VideoLikeVO"> 
select * from videoLike where videoNo =#{videoNo}
</select>

<!-- 좋아요 Delete -->
<delete id="videoLikeDelete" parameterType="busker.scan.vo.VideoLikeVO">
delete from VideoLike where videoNo =#{videoNo}
</delete>

<!-- 좋아요 UpdateMinus -->
<update id="videoLikeUpdateMinus" parameterType="busker.scan.vo.VideoVO">
update video set videoLike= videoLike-1 where videoNo =#{videoNo}
</update>


<!-- 좋아요 리스트 띄우기 -->
<select id="videoMypageLikeList" parameterType="hashmap" resultType="busker.scan.vo.VideoVO"> 
SELECT member.memEmail, member.memTeamName, videoLike.memloginemail, videoLike.LikeNo, video.videoNo, video.videoname, video.videodetail, video.videourl, substr(video.videourl, -11) as videosomenale, video.videoDate, videoLike.videoNo
FROM video 
INNER JOIN videoLike
ON video.videoNo = videoLike.videoNo
INNER JOIN member
ON videoLike.memloginemail = member.mememail
WHERE member.memEmail = #{memEmail}
order by likeno desc
</select>

</mapper>